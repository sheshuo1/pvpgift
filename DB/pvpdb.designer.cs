#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34209
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace pvpgift.DB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="qec_2")]
	public partial class pvpdbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertt_pvp_rankingList(t_pvp_rankingList instance);
    partial void Updatet_pvp_rankingList(t_pvp_rankingList instance);
    partial void Deletet_pvp_rankingList(t_pvp_rankingList instance);
    partial void Insertt_pvp_giftlog(t_pvp_giftlog instance);
    partial void Updatet_pvp_giftlog(t_pvp_giftlog instance);
    partial void Deletet_pvp_giftlog(t_pvp_giftlog instance);
    #endregion
		
		public pvpdbDataContext() : 
				base(global::pvpgift.Properties.Settings.Default.qec_2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public pvpdbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public pvpdbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public pvpdbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public pvpdbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<t_pvp_rankingList> t_pvp_rankingList
		{
			get
			{
				return this.GetTable<t_pvp_rankingList>();
			}
		}
		
		public System.Data.Linq.Table<t_pvp_giftlog> t_pvp_giftlog
		{
			get
			{
				return this.GetTable<t_pvp_giftlog>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_pvp_rankingList")]
	public partial class t_pvp_rankingList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _user_id;
		
		private int _rangking;
		
		private int _defense;
		
		private int _attack;
		
		private int _history_ranking;
		
		private int _update_num;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onuser_idChanging(int value);
    partial void Onuser_idChanged();
    partial void OnrangkingChanging(int value);
    partial void OnrangkingChanged();
    partial void OndefenseChanging(int value);
    partial void OndefenseChanged();
    partial void OnattackChanging(int value);
    partial void OnattackChanged();
    partial void Onhistory_rankingChanging(int value);
    partial void Onhistory_rankingChanged();
    partial void Onupdate_numChanging(int value);
    partial void Onupdate_numChanged();
    #endregion
		
		public t_pvp_rankingList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rangking", DbType="Int NOT NULL")]
		public int rangking
		{
			get
			{
				return this._rangking;
			}
			set
			{
				if ((this._rangking != value))
				{
					this.OnrangkingChanging(value);
					this.SendPropertyChanging();
					this._rangking = value;
					this.SendPropertyChanged("rangking");
					this.OnrangkingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_defense", DbType="Int NOT NULL")]
		public int defense
		{
			get
			{
				return this._defense;
			}
			set
			{
				if ((this._defense != value))
				{
					this.OndefenseChanging(value);
					this.SendPropertyChanging();
					this._defense = value;
					this.SendPropertyChanged("defense");
					this.OndefenseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attack", DbType="Int NOT NULL")]
		public int attack
		{
			get
			{
				return this._attack;
			}
			set
			{
				if ((this._attack != value))
				{
					this.OnattackChanging(value);
					this.SendPropertyChanging();
					this._attack = value;
					this.SendPropertyChanged("attack");
					this.OnattackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_history_ranking", DbType="Int NOT NULL")]
		public int history_ranking
		{
			get
			{
				return this._history_ranking;
			}
			set
			{
				if ((this._history_ranking != value))
				{
					this.Onhistory_rankingChanging(value);
					this.SendPropertyChanging();
					this._history_ranking = value;
					this.SendPropertyChanged("history_ranking");
					this.Onhistory_rankingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_num", DbType="Int NOT NULL")]
		public int update_num
		{
			get
			{
				return this._update_num;
			}
			set
			{
				if ((this._update_num != value))
				{
					this.Onupdate_numChanging(value);
					this.SendPropertyChanging();
					this._update_num = value;
					this.SendPropertyChanged("update_num");
					this.Onupdate_numChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.t_pvp_giftlog")]
	public partial class t_pvp_giftlog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _userID;
		
		private int _rank;
		
		private string _flag;
		
		private System.DateTime _date;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnuserIDChanging(int value);
    partial void OnuserIDChanged();
    partial void OnrankChanging(int value);
    partial void OnrankChanged();
    partial void OnflagChanging(string value);
    partial void OnflagChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
		
		public t_pvp_giftlog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userID", DbType="Int NOT NULL")]
		public int userID
		{
			get
			{
				return this._userID;
			}
			set
			{
				if ((this._userID != value))
				{
					this.OnuserIDChanging(value);
					this.SendPropertyChanging();
					this._userID = value;
					this.SendPropertyChanged("userID");
					this.OnuserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rank", DbType="Int NOT NULL")]
		public int rank
		{
			get
			{
				return this._rank;
			}
			set
			{
				if ((this._rank != value))
				{
					this.OnrankChanging(value);
					this.SendPropertyChanging();
					this._rank = value;
					this.SendPropertyChanged("rank");
					this.OnrankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flag", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string flag
		{
			get
			{
				return this._flag;
			}
			set
			{
				if ((this._flag != value))
				{
					this.OnflagChanging(value);
					this.SendPropertyChanging();
					this._flag = value;
					this.SendPropertyChanged("flag");
					this.OnflagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
